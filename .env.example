# Environment Configuration Example
# This file documents all environment variables used across development, staging, and production environments.
# Copy this file to create environment-specific configurations:
# - .env.development (local development)
# - .env.staging (staging environment)
# - .env.production (production environment)

# Database Configuration
# Format: postgresql://[user]:[password]@[host]:[port]/[db_name]?[options]
# Required for all environments
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/lawn_genius?schema=public"
DIRECT_DATABASE_URL="postgresql://postgres:postgres@localhost:5432/lawn_genius?schema=public"

# Database Connection Pool Settings
DATABASE_POOL_MIN="2"
DATABASE_POOL_MAX="10"
DATABASE_POOL_IDLE_TIMEOUT="60000"
DATABASE_POOL_TIMEOUT="30000"
DATABASE_RELATION_MODE="prisma"

# Database SSL Configuration (Required for production)
DATABASE_SSL_ENABLED="false"
DATABASE_SSL_REJECT_UNAUTHORIZED="true"

# NextAuth.js Configuration
# Required for all environments
# NEXTAUTH_URL should match the environment's base URL
NEXTAUTH_URL="http://localhost:3000"
# NEXTAUTH_SECRET must be unique per environment and at least 32 characters
NEXTAUTH_SECRET="generate-a-secure-secret-key-min-32-chars"

# Google OAuth Configuration
# Required if Google authentication is enabled
# Obtain from Google Cloud Console: https://console.cloud.google.com
GOOGLE_CLIENT_ID="your-google-client-id"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# Stripe Integration
# Required for payment processing
# Use test keys for development/staging, live keys for production
# Obtain from Stripe Dashboard: https://dashboard.stripe.com/apikeys
STRIPE_PUBLIC_KEY="pk_test_your_stripe_public_key"
STRIPE_SECRET_KEY="sk_test_your_stripe_secret_key"
STRIPE_WEBHOOK_SECRET="whsec_your_stripe_webhook_secret"
# Product price IDs from your Stripe dashboard
STRIPE_BASIC_PRICE_ID="price_basic_id"
STRIPE_PRO_PRICE_ID="price_pro_id"
STRIPE_ENTERPRISE_PRICE_ID="price_enterprise_id"

# OpenWeather API Configuration
# Required for weather features
# Obtain from OpenWeather: https://openweathermap.org/api
OPENWEATHER_API_KEY="your-openweather-api-key"

# Resend Email Service Configuration
# Required for email notifications
# Obtain from Resend Dashboard: https://resend.com/dashboard
RESEND_API_KEY="your-resend-api-key"

# Environment Identification
# Required: Set to 'development', 'staging', or 'production'
NODE_ENV="development"

# Security Settings (Optional for development, Recommended for staging/production)
# Rate limiting configuration
ENABLE_RATE_LIMITING=false
MAX_REQUESTS_PER_MINUTE=100
# IP whitelist for admin access (comma-separated)
IP_WHITELIST=""
# SSL enforcement
ENABLE_SSL=false

# Feature Flags
# Optional toggles for different features
ENABLE_WEATHER_ML=false
ENABLE_ERROR_MONITORING=false
ENABLE_PERFORMANCE_MONITORING=false

# Monitoring Configuration (Recommended for staging/production)
# Sentry.io error tracking
SENTRY_DSN=""
# Log level: 'debug', 'info', 'warn', 'error'
LOG_LEVEL="debug"
# Audit logging for security events
ENABLE_AUDIT_LOGGING=false

# Notes:
# 1. Never commit actual environment files (.env.*) to version control
# 2. Use strong, unique secrets for each environment
# 3. Consider using a secrets manager for production credentials
# 4. Regularly rotate API keys and secrets
# 5. Keep staging environment as close to production as possible