name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20.x'

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npm run type-check || exit 1
    
    - name: Lint
      run: npm run lint
    
    - name: Run unit tests
      run: npm run test
      env:
        CI: true

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npm run test:e2e
      env:
        CI: true
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        NEXTAUTH_SECRET: ${{ secrets.TEST_NEXTAUTH_SECRET }}
        NEXTAUTH_URL: http://localhost:3000

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [validate, e2e-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
      env:
        CI: true
        NEXT_PUBLIC_API_URL: ${{ secrets.STAGING_API_URL }}
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: .next
        retention-days: 1

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build
        path: .next
    
    - name: Deploy to Staging
      id: deploy
      run: |
        echo "Deploying to staging environment"
        # Add deployment commands here based on hosting platform
        # Example for Vercel:
        # npx vercel --token ${VERCEL_TOKEN} --prod
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        NODE_ENV: staging
        DEPLOY_URL: https://staging.lawngenius.app

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build
        path: .next
    
    - name: Deploy to Production
      id: deploy
      run: |
        echo "Deploying to production environment"
        # Add deployment commands here based on hosting platform
        # Example for Vercel:
        # npx vercel --token ${VERCEL_TOKEN} --prod
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        NODE_ENV: production
        DEPLOY_URL: https://lawngenius.app